*       *********************************************************
*       *                                                         
*       * 10/11/2011           MENUPRIN.MPR             00:10:20  
*       *                                                         
*       *********************************************************
*       *                                                         
*       * Author's Name                                           
*       *                                                         
*       * Copyright (C) 2011 Company Name                         
*       * Address                                                 
*       * City,     Zip                                           
*       *                                                         
*       * Description:                                            
*       * This PROGRAM was automatically generated BY GENMENU.    
*       *                                                         
*       *********************************************************

* To attach this menu to your Top-Level form, 
* call it from the Init event of the form:

* Syntax: DO <mprname> WITH <oFormRef> [,<cMenuname>|<lRename>][<lUniquePopups>]

*	oFormRef - form object reference (THIS)
*	cMenuname - name for menu (this is required for Append menus - see below)
*	lRename - renames Name property of your form
*	lUniquePopups - determines whether to generate unique ids for popup names
			
* 	example:

*	PROCEDURE Init
*		DO mymenu.mpr WITH THIS,.T.
*	ENDPROC

* Use the optional 2nd parameter if you plan on running multiple instances
* of your Top-Level form. The preferred method is to create an empty string
* variable and pass it by reference so you can receive the form name after
* the MPR file is run. You can later use this reference to destroy the menu.

*	PROCEDURE Init
*		LOCAL cGetMenuName
*		cGetMenuName = ""
*		DO mymenu.mpr WITH THIS, m.cGetMenuName
*	ENDPROC

* The logical lRename parameter will change the name property of your 
* form to the same name given the menu and may cause conflicts in your 
* code if you directly reference the form by name.

* You will also need to remove the menu when the form is destroyed so that it does 
* not remain in memory unless you wish to reactivate it later in a new form.

* If you passed the optional lRename parameter as .T. as in the above example, 
* you can easily remove the menu in the form's Destroy event as shown below.
* This strategy is ideal when using multiple instances of Top-Level forms.

*	example:

*	PROCEDURE Destroy
*		RELEASE MENU (THIS.Name) EXTENDED
*	ENDPROC

* Using Append/Before/After location options:

*   You might want to append a menu to an existing Top-Level form by setting 
*   the Location option in the General Options dialog. In order to do this, you 
*   must pass the name of the menu in which to attach the new one. The second
*   parameter is required here. If you originally created the menu with the lRename 
*   parameter = .T., then you can update the menu with code similar to the following:

*	example:

*	DO mymenu2.mpr WITH THISFORM,THISFORM.name
*
* Using lUniquePopups:

*   If you are running this menu multiple times in your application, such as in multiple 
*   instances of the same top-level form, you should pass .T. to the lUniquePopups 
*   parameter so that unique popup names are generated to avoid possible conflicts.

*	example:

*	PROCEDURE Init
*		DO mymenu.mpr WITH THIS,.T.,.T.
*	ENDPROC
*
* Note: Parm4-Parm9 are not reserved and freely available for use with your menu code.
*

LPARAMETERS oFormRef, getMenuName, lUniquePopups, parm4, parm5, parm6, parm7, parm8, parm9
LOCAL cMenuName, nTotPops, a_menupops, cTypeParm2, cSaveFormName
IF TYPE("m.oFormRef") # "O" OR ;
  LOWER(m.oFormRef.BaseClass) # 'form' OR ;
  m.oFormRef.ShowWindow # 2
	MESSAGEBOX([This menu can only be called from a Top-Level form. Ensure that your form's ShowWindow property is set to 2. Read the header section of the menu's MPR file for more details.])
	RETURN
ENDIF
m.cTypeParm2 = TYPE("m.getMenuName")
m.cMenuName = SYS(2015)
m.cSaveFormName = m.oFormRef.Name
IF m.cTypeParm2 = "C" OR (m.cTypeParm2 = "L" AND m.getMenuName)
	m.oFormRef.Name = m.cMenuName
ENDIF
IF m.cTypeParm2 = "C" AND !EMPTY(m.getMenuName)
	m.cMenuName = m.getMenuName
ENDIF
DIMENSION a_menupops[5]
IF TYPE("m.lUniquePopups")="L" AND m.lUniquePopups
	FOR nTotPops = 1 TO ALEN(a_menupops)
		a_menupops[m.nTotPops]= SYS(2015)
	ENDFOR
ELSE
	a_menupops[1]="arquivos"
	a_menupops[2]="movimentaç"
	a_menupops[3]="contasapag"
	a_menupops[4]="utilitário"
	a_menupops[5]="help"
ENDIF


*       *********************************************************
*       *                                                         
*       *                      Menu Definition                    
*       *                                                         
*       *********************************************************
*

DEFINE MENU (m.cMenuName) IN (m.oFormRef.Name) BAR

DEFINE PAD _3cv00dalw OF (m.cMenuName) PROMPT "\<Arquivos" COLOR SCHEME 3 ;
	KEY ALT+A, ""
DEFINE PAD _3cv00dalx OF (m.cMenuName) PROMPT "\<Movimentações" COLOR SCHEME 3 ;
	KEY ALT+M, ""
DEFINE PAD _3cv00daly OF (m.cMenuName) PROMPT "\<Relatórios" COLOR SCHEME 3 ;
	KEY ALT+R, "" ;
	SKIP FOR gnivel > 2
DEFINE PAD _3cv00dalz OF (m.cMenuName) PROMPT "\<Utilitários" COLOR SCHEME 3 ;
	KEY ALT+U, ""
DEFINE PAD _3cv00dam0 OF (m.cMenuName) PROMPT "\<Help" COLOR SCHEME 3 ;
	KEY ALT+H, ""
DEFINE PAD _3cv00dam1 OF (m.cMenuName) PROMPT "\<Saída" COLOR SCHEME 3 ;
	KEY ALT+S, ""
ON PAD _3cv00dalw OF (m.cMenuName) ACTIVATE POPUP (a_menupops[1])
ON PAD _3cv00dalx OF (m.cMenuName) ACTIVATE POPUP (a_menupops[2])
ON SELECTION PAD _3cv00daly OF (m.cMenuName) do form frelatos
ON PAD _3cv00dalz OF (m.cMenuName) ACTIVATE POPUP (a_menupops[4])
ON PAD _3cv00dam0 OF (m.cMenuName) ACTIVATE POPUP (a_menupops[5])
ON SELECTION PAD _3cv00dam1 OF (m.cMenuName) ;
	DO _3cv00dam2 ;
	IN LOCFILE("SGL\MENUS\MENUPRIN" ,"MPX;MPR|FXP;PRG" ,"WHERE is MENUPRIN?")

DEFINE POPUP (a_menupops[1]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR 1 OF (a_menupops[1]) PROMPT "\<Clientes" ;
	SKIP FOR gNivel > 1 ;
	MESSAGE "Recurso não disponível"
DEFINE BAR 2 OF (a_menupops[1]) PROMPT "\<Fornecedores" ;
	SKIP FOR gNivel > 1 ;
	MESSAGE "recurso não disponivel"
DEFINE BAR 3 OF (a_menupops[1]) PROMPT "\<Balconistas" ;
	SKIP FOR gnivel > 1 ;
	MESSAGE "Recurso não disponível"
DEFINE BAR 4 OF (a_menupops[1]) PROMPT "\<Grupos" ;
	SKIP FOR gnivel > 1 ;
	MESSAGE "Recurso não disponível"
DEFINE BAR 5 OF (a_menupops[1]) PROMPT "\<Produtos" ;
	SKIP FOR gnivel > 1 ;
	MESSAGE "Recurso não disponível"
DEFINE BAR 6 OF (a_menupops[1]) PROMPT "\<Unidades" ;
	SKIP FOR gNivel > 1 ;
	MESSAGE "Recurso não disponível"
DEFINE BAR 7 OF (a_menupops[1]) PROMPT "Tipos de \<Movimentacao" ;
	SKIP FOR gNivel > 1 ;
	MESSAGE "Recurso não disponível"
DEFINE BAR 8 OF (a_menupops[1]) PROMPT "\<Tipos de Venda" ;
	SKIP FOR gNivel > 1 ;
	MESSAGE "Recurso não disponível"
DEFINE BAR 9 OF (a_menupops[1]) PROMPT "Fi\<nanceiras"
ON SELECTION BAR 1 OF (a_menupops[1]) do form fclientes
ON SELECTION BAR 2 OF (a_menupops[1]) DO form ffornece
ON SELECTION BAR 3 OF (a_menupops[1]) DO form foperado
ON SELECTION BAR 4 OF (a_menupops[1]) Do form fgrupos
ON SELECTION BAR 5 OF (a_menupops[1]) DO form fprodutos
ON SELECTION BAR 6 OF (a_menupops[1]) do form fUnidades
ON SELECTION BAR 7 OF (a_menupops[1]) do form ftipomov
ON SELECTION BAR 8 OF (a_menupops[1]) do form ftipovend
ON SELECTION BAR 9 OF (a_menupops[1]) do form ffinanceir

DEFINE POPUP (a_menupops[2]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR 1 OF (a_menupops[2]) PROMPT "Orçamentos"
DEFINE BAR 2 OF (a_menupops[2]) PROMPT "\<Vendas"
DEFINE BAR 3 OF (a_menupops[2]) PROMPT "\<Cancelar Vendas"
DEFINE BAR 4 OF (a_menupops[2]) PROMPT "\-"
DEFINE BAR 5 OF (a_menupops[2]) PROMPT "\<Fechamento de Clientes"
DEFINE BAR 6 OF (a_menupops[2]) PROMPT "\-"
DEFINE BAR 7 OF (a_menupops[2]) PROMPT "\<Entradas por compra" ;
	SKIP FOR gNivel > 1
DEFINE BAR 8 OF (a_menupops[2]) PROMPT "Ca\<ncelar Entradas" ;
	SKIP FOR gnivel > 2
DEFINE BAR 9 OF (a_menupops[2]) PROMPT "\-"
DEFINE BAR 10 OF (a_menupops[2]) PROMPT "\<Outras Movimentações" ;
	SKIP FOR gnivel > 1
DEFINE BAR 11 OF (a_menupops[2]) PROMPT "Contas a \<pagar" ;
	SKIP FOR gnivel > 1
ON SELECTION BAR 1 OF (a_menupops[2]) do form fOrcamen
ON SELECTION BAR 2 OF (a_menupops[2]) ;
	DO _3cv00dam3 ;
	IN LOCFILE("SGL\MENUS\MENUPRIN" ,"MPX;MPR|FXP;PRG" ,"WHERE is MENUPRIN?")
ON SELECTION BAR 3 OF (a_menupops[2]) do form fcancvenda
ON SELECTION BAR 5 OF (a_menupops[2]) do form ffechacli
ON SELECTION BAR 7 OF (a_menupops[2]) do form fentradas
ON SELECTION BAR 8 OF (a_menupops[2]) do form fcancent
ON SELECTION BAR 10 OF (a_menupops[2]) do form foutrasmov
ON BAR 11 OF (a_menupops[2]) ACTIVATE POPUP (a_menupops[3])

DEFINE POPUP (a_menupops[3]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR 1 OF (a_menupops[3]) PROMPT "\<Manutenção"
DEFINE BAR 2 OF (a_menupops[3]) PROMPT "\<Baixas"
ON SELECTION BAR 1 OF (a_menupops[3]) do form fapagar
ON SELECTION BAR 2 OF (a_menupops[3]) do form fbaiapag

DEFINE POPUP (a_menupops[4]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR 1 OF (a_menupops[4]) PROMPT "Cópia de Segurança" ;
	SKIP FOR gNivel > 1
DEFINE BAR 2 OF (a_menupops[4]) PROMPT "Reparar Base de Dados" ;
	SKIP FOR gnivel > 1
DEFINE BAR 3 OF (a_menupops[4]) PROMPT "Parâmetros" ;
	SKIP FOR gnivel > 1
ON SELECTION BAR 1 OF (a_menupops[4]) do form fbackup
ON SELECTION BAR 3 OF (a_menupops[4]) do form floja

DEFINE POPUP (a_menupops[5]) MARGIN RELATIVE SHADOW COLOR SCHEME 4
DEFINE BAR 1 OF (a_menupops[5]) PROMPT "\<Sobre"
DEFINE BAR 2 OF (a_menupops[5]) PROMPT "\<Ajuda do SGL"
ON SELECTION BAR 1 OF (a_menupops[5]) do form about

ACTIVATE MENU (m.cMenuName) NOWAIT

IF m.cTypeParm2 = "C"
	m.getMenuName = m.cMenuName
	m.oFormRef.Name = m.cSaveFormName 
ENDIF


*       *********************************************************
*       *                                                         
*       * _3CV00DAM2  ON SELECTION PAD                            
*       *                                                         
*       * Procedure Origin:                                       
*       *                                                         
*       * From Menu:  MENUPRIN.MPR,            Record:   45       
*       * Called By:  ON SELECTION PAD                            
*       * Prompt:     Saída                                       
*       * Snippet:    1                                           
*       *                                                         
*       *********************************************************
*
PROCEDURE _3cv00dam2

If gDesenv
   Clear Events
   Release all
   Clear all
   Cancel
   do carrega.prg
   Cancel
   Set Sysmenu to default
   RETURN
Else
   Release all
   Clear all
   quit
Endif



*       *********************************************************
*       *                                                         
*       * _3CV00DAM3  ON SELECTION BAR 2 OF POPUP movimentaç      
*       *                                                         
*       * Procedure Origin:                                       
*       *                                                         
*       * From Menu:  MENUPRIN.MPR,            Record:   17       
*       * Called By:  ON SELECTION BAR 2 OF POPUP movimentaç      
*       * Prompt:     Vendas                                      
*       * Snippet:    2                                           
*       *                                                         
*       *********************************************************
*
PROCEDURE _3cv00dam3
*!*	fsvendas.sequencia = "000000000"

*!*	fsvendas.fVendas.visible =.t.

*!*	SELECT MAX(VAL(NSU)) AS sequencia FROM tab_orc INTO CURSOR cNsu
*!*	IF RECCOUNT() = 0
*!*	   pnNsu = 1
*!*	Else
*!*	   pnNsu = Sequencia + 1
*!*	ENDIF

*!*	pnNsu = PADL(ALLTRIM(STR(pnNsu,9)),9,"0")
*!*	
*!*	fsvdas.sequencia = pnNsu

*!*	INSERT INTO tab_orc (nsu) VALUES (pnNsu)

*!*	fvendas.fvendas.txtPedido.Value = thisformset.sequencia

*!*	do form fvendas

SET DATABASE TO (lcdatabase)

SELECT MAX(VAL(NSU)) AS sequencia FROM tab_orc INTO CURSOR cNsu

IF RECCOUNT() = 0
   pnNsu = 1
Else
   pnNsu = Sequencia + 1
ENDIF

pnNsu = PADL(ALLTRIM(STR(pnNsu,9)),9,"0")

*THISform.sequencia = pnNsu

INSERT INTO tab_orc (nsu) VALUES (pnNsu)

*Fvendas.txtPedido.Value = thisform.sequencia

do form fvendas with pnNsu

